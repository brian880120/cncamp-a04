apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: httpserver-app
  name: httpserver-app
  namespace: webservice
spec:
  replicas: 3
  selector:
    matchLabels:
      app: httpserver-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
      creationTimestamp: null
      labels:
        app: httpserver-app
    spec:
      containers:
      - image: brian880120/cncampa03-httpserver:v2
        name: httpserver
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: httpserver-config
              key: PORT
        volumeMounts:
        - mountPath: /var/log
          name: log-volume
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo Hello from the port: ${PORT} > /usr/share/message"]
        startupProbe:
          httpGet:
            path: /healthz
            port: 8080
          periodSeconds: 10
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 700m
            memory: 200Mi
          requests:
            cpu: 500m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        ports:
        - containerPort: 8080
      restartPolicy: Always
      volumes:
      - name: log-volume
        emptyDir: {}
status: {}
